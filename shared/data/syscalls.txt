 0:_exit:int32_t code
 1:fork:
 2:msleep:uint32_t millis
 3:log:const char *loc, uint32_t len
 4:uptime:

 5:open:const char *path, uint32_t flags
 6:close:ufd_idx_t ufd
 7:socket:uint32_t family, uint32_t type, uint32_t protocol
 8:listen:ufd_idx_t ufd, uint32_t backlog
 9:accept:ufd_idx_t ufd, struct sockaddr *useraddr, socklen_t *len
10:bind:ufd_idx_t ufd, const struct sockaddr *useraddr, socklen_t len
11:connect:ufd_idx_t ufd, const struct sockaddr *useraddr, socklen_t len
12:shutdown:ufd_idx_t ufd, int how
13:recv:ufd_idx_t ufd, void *user_buff, uint32_t buffsize, uint32_t flags
14:send:ufd_idx_t ufd, const void *user_buff, uint32_t buffsize, uint32_t flags

15:alloc_page:void *addr
16:free_page:

17:getdents:ufd_idx_t ufd, struct dirent *user_buff, uint32_t buffsize

18:stat:const char *path, void *buff
19:lstat:
20:fstat:ufd_idx_t ufd, void *buff
21:read:ufd_idx_t ufd, void *buff, uint32_t len
22:write:ufd_idx_t ufd, const void *buff, uint32_t len

23:chdir:const char *path
24:getcwd:char *buf, size_t size

25:fexecve:int fd, char *const argv[], char *const envp[]
26:getpid:
27:waitpid:pid_t pid, int *stat_loc, int options

100:unimplemented:char *msg
