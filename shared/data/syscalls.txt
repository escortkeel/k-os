 0:_exit:int32_t code
 1:fork:
 2:msleep:uint32_t millis
 3:log:const char *loc, uint32_t len
 4:uptime:

 5:open:const char *path, uint32_t flags, uint32_t mode
 6:close:ufd_idx_t ufd
 7:seek:ufd_idx_t ufd, off_t off, int whence
 8:socket:uint32_t family, uint32_t type, uint32_t protocol
 9:listen:ufd_idx_t ufd, uint32_t backlog
10:accept:ufd_idx_t ufd, struct sockaddr *useraddr, socklen_t *len
11:bind:ufd_idx_t ufd, const struct sockaddr *useraddr, socklen_t len
12:connect:ufd_idx_t ufd, const struct sockaddr *useraddr, socklen_t len
13:shutdown:ufd_idx_t ufd, int how
14:recv:ufd_idx_t ufd, void *user_buff, uint32_t buffsize, uint32_t flags
15:send:ufd_idx_t ufd, const void *user_buff, uint32_t buffsize, uint32_t flags

16:alloc_page:void *addr
17:free_page:

18:getdents:ufd_idx_t ufd, struct dirent *user_buff, uint32_t buffsize

19:stat:const char *path, void *buff
20:lstat:const char *path, void *buff
21:fstat:ufd_idx_t ufd, void *buff
22:read:ufd_idx_t ufd, void *buff, uint32_t len
23:write:ufd_idx_t ufd, const void *buff, uint32_t len

24:chdir:const char *path
25:getcwd:char *buf, size_t size

26:execve:const char *pathname, char *const argv[], char *const envp[]
27:fexecve:ufd_idx_t ufd, char *const argv[], char *const envp[]

28:getpid:
29:getppid:
30:waitpid:pid_t pid, int *stat_loc, int options

100:unimplemented:char *msg, bool fatal
